# profile.py

from aiogram import types
from aiogram.dispatcher import Dispatcher
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from utils.db import get_planted_trees, get_user_xp, get_referrals, get_user_language  # –û–±–Ω–æ–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç –Ω–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
from utils.levels import get_level_by_xp
from utils.localization import _
from utils.achievements import get_user_achievements_with_progress

async def profile_handler(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id

    # –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print(f"[DEBUG] –ó–∞–ø—Ä–æ—Å —è–∑—ã–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    lang_code = await get_user_language(user_id)  # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –ø–æ–ª—É—á–∞–µ–º —è–∑—ã–∫
    print(f"[DATA] –Ø–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {lang_code}")

    # –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è
    print(f"[DEBUG] –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")

    # –ü–æ–ª—É—á–∞–µ–º XP –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print(f"[DEBUG] –ü–æ–ª—É—á–µ–Ω–∏–µ XP –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    xp = await get_user_xp(user_id)  # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –ø–æ–ª—É—á–∞–µ–º XP
    print(f"[DATA] XP –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {xp}")

    # –í—ã—á–∏—Å–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ XP
    print(f"[DEBUG] –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –Ω–∞ –æ—Å–Ω–æ–≤–µ XP: {xp}")
    level = get_level_by_xp(xp)  # –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è
    print(f"[DATA] –£—Ä–æ–≤–µ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {level}")

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ—Å–∞–∂–µ–Ω–Ω—ã—Ö –¥–µ—Ä–µ–≤—å—è—Ö
    print(f"[DEBUG] –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ—Å–∞–∂–µ–Ω–Ω—ã—Ö –¥–µ—Ä–µ–≤—å—è—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    trees = await get_planted_trees(user_id)  # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –¥–µ—Ä–µ–≤—å—è—Ö
    print(f"[DATA] –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ä–µ–≤—å–µ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {trees}")

    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    print(f"[DEBUG] –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    referrals = len(await get_referrals(user_id))  # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –ø–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    print(f"[DATA] –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {referrals}")

    # –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
    user_data = {
        'trees': trees,
        'referrals': referrals
    }

    # –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
    print(f"[DEBUG] –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    achievements_by_category = get_user_achievements_with_progress(user_data)
    print(f"[DATA] –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {achievements_by_category}")

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
    print(f"[DEBUG] –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    profile_message = _(lang_code, "profile_message",
                        level=level,
                        xp=xp,
                        trees=trees,
                        referrals=referrals)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
    for category, achievements in achievements_by_category.items():
        profile_message += f"\n\nüìã {category}:\n"
        for achievement in achievements:
            profile_message += f"{achievement['icon']} {achievement['title']}: {achievement['progress']} ({achievement['percent']}%)\n"

    # –õ–æ–≥–∏—Ä—É–µ–º –æ–∫–æ–Ω—á–∞–Ω–∏–µ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
    print(f"[DEBUG] –°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ.")

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    keyboard = types.InlineKeyboardMarkup().add(
        types.InlineKeyboardButton(_(lang_code, "back_to_menu_button"), callback_data="main_menu")
    )

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
    print(f"[DEBUG] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    await callback_query.message.edit_text(profile_message, reply_markup=keyboard)
    await callback_query.answer()

    print(f"[DEBUG] –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ—Ñ–∏–ª—è –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")

def register_profile_handler(dp: Dispatcher):
    dp.register_callback_query_handler(profile_handler, lambda c: c.data == "profile")
